const allowed = [
    'display',
    'flex-direction',
    'flex-wrap',
    'flex-flow',
    'justify-content',
    'align-items',
    'align-content',
    'gap',
    'column-gap',
    'row-gap',
    'order',
    'align-self',
    'flex-grow',
    'flex-shrink',
    'flex-basis',
    'flex',
    'align-self'
];

const q = [
    { q: "Quelle propriété CSS permet de définir un conteneur comme un élément Flexbox ?", a: "display" },
    { q: "Quelle propriété CSS contrôle la direction principale des éléments flexibles ?", a: "flex-direction" },
    { q: "Quelle propriété CSS permet de gérer le passage des éléments à la ligne dans un conteneur flex ?", a: "flex-wrap" },
    { q: "Quelle propriété CSS est une combinaison de flex-direction et flex-wrap ?", a: "flex-flow" },
    { q: "Quelle propriété CSS aligne les éléments le long de l’axe principal dans un conteneur flex ?", a: "justify-content" },
    { q: "Quelle propriété CSS aligne les éléments le long de l’axe secondaire dans un conteneur flex ?", a: "align-items" },
    { q: "Quelle propriété CSS contrôle l’alignement des lignes de flex lorsqu’il y a plusieurs lignes ?", a: "align-content" },
    { q: "Quelle propriété CSS permet d’ajouter un espacement uniforme entre les éléments flexibles ?", a: "gap" },
    { q: "Quelle propriété CSS définit l’espacement entre les colonnes dans un conteneur flex ?", a: "column-gap" },
    { q: "Quelle propriété CSS définit l’espacement entre les lignes dans un conteneur flex ?", a: "row-gap" },
    { q: "Quelle propriété CSS permet de modifier l’ordre d’affichage des éléments flexibles ?", a: "order" },
    { q: "Quelle propriété CSS permet à un élément flex de s’aligner différemment des autres sur l’axe secondaire ?", a: "align-self" },
    { q: "Quelle propriété CSS permet à un élément flex de grandir pour occuper plus d’espace disponible ?", a: "flex-grow" },
    { q: "Quelle propriété CSS permet à un élément flex de rétrécir lorsque l’espace est insuffisant ?", a: "flex-shrink" },
    { q: "Quelle propriété CSS définit la taille initiale d’un élément flex avant la répartition de l’espace ?", a: "flex-basis" },
    { q: "Quelle propriété CSS est un raccourci combinant flex-grow, flex-shrink et flex-basis ?", a: "flex" },
    { q: "Quelle propriété CSS doit-on modifier pour inverser l’ordre des éléments dans un conteneur flex sans changer le HTML ?", a: "order" },
    { q: "Comment forcer un élément flex à ne pas grandir du tout, même s’il reste de l’espace ?", a: "flex-grow" },
    { q: "Comment empêcher un élément flex de se rétrécir lorsqu’il y a un manque d’espace ?", a: "flex-shrink" },
    { q: "Quelle propriété CSS est utilisée pour empêcher les éléments flexibles de s’afficher sur une seule ligne ?", a: "flex-wrap" },
    { q: "Quelle propriété CSS aligne les éléments flexibles à gauche, au centre ou à droite sur l’axe principal ?", a: "justify-content" },
    { q: "Quelle propriété CSS est utilisée pour aligner un seul élément flex de manière différente des autres ?", a: "align-self" },
    { q: "Comment s’assurer que les éléments flex ont un espace uniforme entre eux sur l’axe principal ?", a: "justify-content" },
    { q: "Comment modifier la disposition des éléments flexibles pour qu’ils s’empilent verticalement au lieu d’horizontalement ?", a: "flex-direction" },
    { q: "Quelle propriété CSS permet de définir à la fois la direction et l’enveloppement des éléments flexibles ?", a: "flex-flow" },
    { q: "Quelle propriété CSS permet d’ajouter un espacement horizontal spécifique entre les colonnes d’un conteneur flex ?", a: "column-gap" },
    { q: "Quelle propriété CSS permet d’ajouter un espacement vertical spécifique entre les lignes d’un conteneur flex ?", a: "row-gap" },
    { q: "Quelle propriété CSS permet de centrer les éléments flexibles verticalement dans un conteneur flex ?", a: "align-items" },
    { q: "Comment aligner un seul élément flex différemment de ses voisins sans modifier align-items ?", a: "align-self" },
    { q: "Quelle propriété CSS permet de spécifier que les éléments flex ne doivent pas être rétrécis ?", a: "flex-shrink" },
    { q: "Comment augmenter la hauteur d’un élément flex pour qu’il prenne automatiquement tout l’espace disponible ?", a: "flex-grow" },
    { q: "Quelle propriété CSS est utilisée pour déterminer si les éléments doivent être affichés en ligne ou en colonne dans un conteneur flex ?", a: "flex-direction" },
    { q: "Quelle propriété CSS permet de définir la taille initiale d’un élément flex avant que l’espace ne soit distribué ?", a: "flex-basis" },
    { q: "Comment distribuer l’espace disponible entre les éléments flex sans les regrouper aux extrémités ?", a: "justify-content" },
    { q: "Comment empêcher un élément flex de changer de taille même si l’espace autour de lui change ?", a: "flex" },
    { q: "Quelle propriété CSS est utilisée pour contrôler l’affichage des éléments flex dans une interface mobile responsive ?", a: "flex-wrap" },
    { q: "Quelle propriété CSS permet de centrer des éléments flexibles à la fois horizontalement et verticalement ?", a: "justify-content" },
    { q: "Quelle propriété CSS définit comment les lignes d’un conteneur flex s’organisent lorsqu’elles ne tiennent pas sur une seule ligne ?", a: "align-content" },
    { q: "Quelle propriété CSS est utilisée pour répartir équitablement l’espace disponible entre les éléments flexibles ?", a: "justify-content" },
    { q: "Comment modifier la taille initiale des éléments flex avant la répartition de l’espace disponible ?", a: "flex-basis" },
    { q: "Quelle propriété CSS permet de rendre un élément plus prioritaire pour occuper l’espace disponible par rapport aux autres ?", a: "flex-grow" },
    { q: "Quelle propriété CSS permet de forcer un élément flex à être affiché sur une nouvelle ligne lorsqu’il manque d’espace ?", a: "flex-wrap" },
    { q: "Quelle propriété CSS peut être utilisée pour créer une grille fluide et adaptable avec Flexbox ?", a: "flex" },
    { q: "Comment empêcher un élément flex d’être étiré ou compressé et de conserver une taille fixe ?", a: "flex" },
    { q: "Quelle propriété CSS permet de modifier l’ordre naturel des éléments flexibles sans changer leur position dans le HTML ?", a: "order" },
    { q: "Quelle propriété CSS doit être utilisée pour répartir uniformément les éléments flexibles sur plusieurs lignes ?", a: "align-content" }
];

export default {
    title: 'Flexbox',
    q,
    allowed,
    n: 10,
    doc: 'https://developer.mozilla.org/fr/docs/Web/CSS/'
};